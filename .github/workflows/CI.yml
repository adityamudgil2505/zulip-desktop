name: CI/CD

on:
  push:
    branches: 
    - testing2
  pull_request:
    branches: 
    - testing2

jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version:
        - 10
        - 12
        os: 
        - ubuntu-latest
#         - windows-latest
#         - macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setting up Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Installing npm modules
      run: npm install

    - name: Running Tests
      run: |
        npm run test        

    - name: Electron Builder Action
      uses: samuelmeuli/action-electron-builder@v1.3.0
      with:
        # GitHub authentication token
        github_token: ${{ secrets.github_token }}

        # Whether the app should be released after a successful build
        release:  ${{ startsWith(github.ref, 'refs/tags/v') }}
   
    - name: Cleanup artifacts
      if: matrix.os != 'windows-latest'
      run: |
          mkdir artifacts
          mv "dist/(*.exe,*.deb,*.AppImage,*.dmg)" artifacts || true

    - name: Cleanup artifacts Win
      if: matrix.os == 'windows-latest'
      run: |
          mkdir artifacts
          mv dist/*.exe artifacts
   
    - name: see directory in dist
      run: ls ./dist
        
    - name: Deploying to GPR
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Zulip - ${{matrix.os}}
        path: ./dist
